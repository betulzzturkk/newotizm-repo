@model IEnumerable<AutismEducationPlatform.Web.Models.Course>

@{
    ViewData["Title"] = "Eğitimler";
    Random rnd = new Random();
}

<div class="container py-5">
    <h1 class="text-center mb-5">Eğitimlerimiz</h1>

    <div class="row g-4">
        @foreach (var course in Model)
        {
            var randomDifficulty = rnd.Next(2, 6); // 2 ile 5 arasında rastgele zorluk
            <div class="col-md-4">
                <div class="card h-100 border-0 shadow-sm">
                    <div class="position-relative">
                        <img src="@GetCourseImage(course.Name)" class="card-img-top" alt="@course.Name">
                        <div class="difficulty-stars">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fas fa-star @(i <= randomDifficulty ? "star-active" : "star-inactive")"></i>
                            }
                        </div>
                    </div>
                    <div class="card-body">
                        <h4 class="card-title">@course.Name</h4>
                        <p class="card-text">@course.Description</p>
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="badge bg-primary">@course.Category</span>
                            <a asp-action="Details" asp-route-id="@course.Id" class="btn btn-outline-primary">
                                Eğitime Git
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    private string GetCourseImage(string courseName)
    {
        return courseName.ToLower() switch
        {
            var name when name.Contains("hayvan") => "/images/courses/animals.jpg",
            var name when name.Contains("renk") => "/images/courses/colors.png",
            var name when name.Contains("sayı") => "/images/courses/numbers.jpg",
            var name when name.Contains("duygu") => "/images/courses/emotions.jpg",
            var name when name.Contains("şekil") => "/images/courses/shapes.jpg",
            var name when name.Contains("trafik") => "/images/courses/traffic.jpg",
            var name when name.Contains("görgü") => "/images/courses/manners.jpg",
            var name when name.Contains("masal") => "/images/courses/stories.jpg",
            var name when name.Contains("video") => "/images/courses/videos.jpg",
            _ => "/images/courses/default.jpg"
        };
    }
}

<style>
    .card {
        transition: transform 0.3s ease;
        overflow: hidden;
    }

    .card:hover {
        transform: translateY(-5px);
    }

    .card-img-top {
        height: 200px;
        object-fit: cover;
    }

    .difficulty-stars {
        position: absolute;
        top: 10px;
        right: 10px;
        padding: 8px 12px;
        background-color: rgba(0, 0, 0, 0.7);
        border-radius: 20px;
        backdrop-filter: blur(5px);
        box-shadow: 0 2px 10px rgba(0,0,0,0.3);
        transition: transform 0.3s ease;
    }

    .card:hover .difficulty-stars {
        transform: scale(1.1);
    }

    .difficulty-stars i {
        margin: 0 2px;
        font-size: 1.2rem;
    }

    .star-active {
        color: #FFD700;
        text-shadow: 0 0 10px rgba(255, 215, 0, 0.5);
        animation: star-pulse 2s infinite;
    }

    .star-inactive {
        color: rgba(255, 255, 255, 0.5);
    }

    @@keyframes star-pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.2); }
        100% { transform: scale(1); }
    }

    .badge {
        font-size: 0.9rem;
        padding: 8px 12px;
        border-radius: 15px;
    }

    .btn-outline-primary {
        border-radius: 20px;
        padding: 8px 20px;
        font-weight: 500;
    }
</style> 