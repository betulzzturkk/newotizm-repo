@model List<AutismEducationPlatform.Web.Models.ViewModels.ColorViewModel>

@{
    ViewData["Title"] = "Renkler";
}

<div class="container-fluid mt-4">
    <div class="row mb-4">
        <div class="col">
            <a asp-controller="Course" asp-action="Index" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left me-2"></i>Eğitimlere Dön
            </a>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-12 col-md-10">
            <div class="text-center mb-5">
                <h1 class="display-4 fw-bold text-primary mb-3">Renkler</h1>
                <p class="lead text-muted">Haydi birlikte renkleri öğrenelim!</p>
            </div>

            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-5 g-4 mb-5">
                @foreach (var color in Model)
                {
                    <div class="col">
                        <div class="card h-100 color-card border-0 shadow-sm">
                            <div class="card-body text-center p-4">
                                <div class="image-wrapper mb-4">
                                    <div class="image-container rounded-circle p-3" style="background: linear-gradient(135deg, @color.HexCode 0%, @(color.Name == "Beyaz" ? "#F8F9FA" : color.HexCode) 100%);">
                                        <img src="@color.ImagePath" class="color-image" alt="@color.Name">
                                    </div>
                                </div>
                                <h3 class="card-title h4 mb-3" style="color: @color.HexCode">@color.Name</h3>
                                <p class="card-text text-muted mb-3">@color.Description</p>
                                <p class="card-text example-text">
                                    <small class="text-muted">
                                        <i class="fas fa-lightbulb me-1"></i>
                                        @color.Example
                                    </small>
                                </p>
                                <button class="btn play-sound" 
                                        style="background: linear-gradient(45deg, @color.HexCode, @(color.Name == "Beyaz" ? "#F8F9FA" : color.HexCode)); color: @(color.Name == "Beyaz" || color.Name == "Sarı" ? "#000" : "#fff");"
                                        data-color="@color.Name.ToLower()">
                                    <i class="fas fa-volume-up me-2"></i>
                                    <span>Sesi Çal</span>
                                    <div class="spinner-border spinner-border-sm d-none ms-2" role="status">
                                        <span class="visually-hidden">Yükleniyor...</span>
                                    </div>
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .color-card {
        transition: all 0.3s ease;
        border-radius: 15px;
        overflow: hidden;
    }

    .color-card:hover {
        transform: translateY(-5px);
    }

    .image-wrapper {
        position: relative;
        margin: 0 auto;
        width: 160px;
        height: 160px;
    }

    .image-container {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

    .color-image {
        max-width: 80%;
        max-height: 80%;
        object-fit: contain;
        transition: all 0.3s ease;
    }

    .card:hover .color-image {
        transform: scale(1.1);
    }

    .example-text {
        min-height: 40px;
        font-style: italic;
    }

    .play-sound {
        border-radius: 50px;
        padding: 8px 20px;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        border: none;
    }

    .play-sound:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        opacity: 0.9;
    }

    .play-sound:active {
        transform: scale(0.95);
    }

    .play-sound.loading {
        pointer-events: none;
        opacity: 0.7;
    }

    .play-sound.loading .fa-volume-up,
    .play-sound.loading span {
        display: none;
    }

    .play-sound.loading .spinner-border {
        display: inline-block !important;
    }

    /* Responsive düzenlemeler */
    @@media (max-width: 768px) {
        .image-wrapper {
            width: 140px;
            height: 140px;
        }

        .card-body {
            padding: 1.25rem !important;
        }
    }
</style>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.play-sound').click(function(e) {
                e.preventDefault();
                const button = $(this);
                const colorName = button.data('color');
                const soundFile = colorName
                    .replace('kırmızı', 'kirmizi')
                    .replace('ı', 'i')
                    .replace('ü', 'u')
                    .replace('ö', 'o')
                    .replace('ğ', 'g')
                    .replace('ş', 's')
                    .replace('ç', 'c');
                
                console.log('Çalınacak ses dosyası:', soundFile); // Debug için
                const audio = new Audio(`/sounds/colors/${soundFile}.mp3`);
                
                // Loading durumunu göster
                button.addClass('loading');
                
                audio.play().then(() => {
                    // Ses çalmaya başladığında loading'i kaldır
                    button.removeClass('loading');
                }).catch((error) => {
                    console.error('Ses çalma hatası:', error);
                    button.removeClass('loading');
                    alert('Ses dosyası çalınamadı. Lütfen tekrar deneyin.');
                });
            });
        });
    </script>
} 